authentication:
    x rm DBeaver networked connections that do not use AD
    x clean up DBeaver connections, filtering DBMSes & schemas 
    configure Leaf API to use AD authorization for Leaf service account
x analyze mapping_import:
    x rows that are all NULL in either all source or all target concepts
    x rows that match the concept relationships I find in omop.cdm

conditions done:
    X run additional_scripts/large_files/icd10.sql to create temp UMLS_ICD10 table
    X Map ICD-10-CM → SNOMED in temp table, using Athena's reference data
    X find 'Epic diagnosis ID' records in src: caboodle.DiagnosisDim.DiagnosisEpicId is Epic Id
    X Map 1-to-1 'Epic diagnosis ID' → ICD-10-CM in temp table, using our Epic concept tables in src
    X add WHERE tbl._HasSourceClarity = 1 and tbl._IsDeleted = 0 where available
    X get select access to omop for me
    X replace automated mappings that conflict with the ones Sharon has mapped by hand
    X properly populate SOURCES
    validate the mappings:
        X no NULLs in EPIC EDG .1, ICD10, or SNOMED, so all used EDG .1 can be fully mapped
        X all EPIC EDG .1 → SNOMED are 1-to-1, so condition_concept_id can be unambiguously initialized
    X count the unique ICD10 codes in the diagnosis_map
    X check with Nic on size of ICD10 tree
    x make a concept_map_for_loading table with ICD-10-CM → SNOMED mappings for BlueTree
    x obtain the 1-to-many manual mappings
    x put Algorithms in Confluence
    x login to Confluence
    x document the mappings
    x Consult with Sharon RE EPIC EDG .1 → ICD10 → SNOMED mappings
    x examine # unique ICD10s when not filtering on 'active' codes
    x create test_omop which I can use:
        x create tables I need to modify: concept_relationship & condition_occurrence
        x update condition_occurrence with Epic -> SNOMED from leaf_scratch.diagnosis_map
        x create record in LeafDB.app.ConceptSqlSet for this test condition_occurrence
        x revise leaf_icd10.sql to use these tables
        x test and run leaf_icd10.sql
    x clean up leaf_icd10.sql tabs
    x rename diagnosis_map -> conditions_map
    x share current leaf_icd10.sql with Nic
    x create table rpt.Leaf_usagi.mapping_import with the same schema as src.usagi.mapping_import
    x insert sharon's mappings in concept_relationship into rpt.Leaf_usagi.mapping_import
    x to reliably identify manual mappings, have conditions.sql use rpt.Leaf_usagi.mapping_import, not concept_relationship
        x don't make concept_map_for_loading; instead, insert new mappings into rpt.Leaf_usagi.mapping_import
        x obtain sharon's mappings from rpt.Leaf_usagi.mapping_import, not concept_relationship
    x check for duplicates in UMLS_ICD10 table, and in LeafDB concepts table
    x modify conditions.sql to avoid adding duplicates to rpt.Leaf_usagi.mapping_import
    x investigate unexpected output of conditions.sql in rpt.Leaf_usagi.mapping_import
        x does mapping_import contain duplicates?
        x what additional records are being created in mapping_import when conditions.sql is re-executed?
    x ensure that concept has one tree for each domain
    x share code with Tim for a code review
    x run analyze_mapping_import.sql again; add Sharon's conditions mappings to it
    x try conditions.sql with and without active conditions
    x diagram conditions.sql
    x use conditions.sql to update the 1-to-many_manual_mappings_Epic_to_SNOMED.csv file
    x finish updating confluence document
    x use conditions.sql to update the missing_SNOMED_2_ICD10_mappings.csv file
    x share Leaf_usagi.Leaf_staging table with Tim for loading into concept_relationship
    x re-run build_test_omop.sql, and retry Leaf
    x write script to check on updates made by post_concept_creation_tasks.sql
    x get post_concept_creation_tasks.sql to run
    x forward Leaf complements to Nic
    x get and address Tim's comments on conditions.sql

    reload all Leaf concepts with new MSDW2 data:
        x run empty_concepts_n_its_antecedents.sql
        x run 2_demographics.sql, 3_visits.sql, & 5_vitals.sql
        x run leaf_icd10.sql
        x try LeafDB.app.sp_UpdateSearchIndexTables

Leaf beta done
    x restart post_concept_creation_tasks.sh
    x debug LeafDB.app.sp_UpdateSearchIndexTables
    x move old code in leaf-scripts/leaf_launch/conditions into old sub-dir
    try cdm_deid
        x modify sql to use it & rpt.test_omop_conditions.condition_occurrence
        x empty the customized LeafDB app tables
        x set LEAF_SVC_PWD env. var.
        x run run_leaf_omop_scripts.sh
        x run leaf_icd10.sql
        x run post_concept_creation_tasks.sql, with sp_UpdateSearchIndexTables first, which finishes quickly
        x run eval_post_concept_creation_tasks.sql
        x try Leaf, esp. Age queries and Patient list
    debug cdm_deid
        configure Leaf to use rpt.leaf_scratch.person
            update LeafDB.app.ConceptSqlSet.SqlSetFrom to rpt.LEAF_SCRATCH.person

Leaf beta, synch with MSDW2, 2021-08-27
    MAKE SINGLE SCRIPT TO UPDATE LEAFDB AFTER CHANGES TO THE CDM
        x incorporate special de-id Sql From sub-queries
        x try to use de-id schema
    x empty the customized LeafDB app tables
    x kinit goldba06
    x run run_leaf_omop_scripts.sh
    x kdestroy
    x run leaf_icd10.sql
    x run post_concept_creation_tasks.sql, w sp_UpdateSearchIndexTables first, which finishes fast
    x fix "WHERE SqlSetFrom = 'omop.cdm_deid.person'" expressions
    x change remaining uses of cdm_std to cdm_deid
    x make all searches for omop.cdm_deid_std use LIKE
    x empty and run DemographicQuery
    x change ConceptSqlFrom clauses
    X (unsure why fixed) fix 'leaf_icd10.sql' Line 74 "Subquery returned more than 1 value. This is not permitted ... when the subquery is used as an expression."
    x reactivate living and Deceased concepts after person and death person_ids are cleaned up
    x run eval_post_concept_creation_tasks.sql
    switch to using the set of vitals that Sharon selected
    perhaps recreate rpt.test_omop_conditions.condition_occurrence with deid data
    switch Leaf API Kerberos account back to service_leaf@MSNYUHEALTH.ORG when omop.cdm_deid_std.condition_occurrence is ready
    ** test all ConceptSqlFrom clauses
    use omop.cdm_deid_std.condition_occurrence & REMOVE ALL REFERENCES TO 'TEST_OMOP_CONDITIONS'
    have update_leaf.sh exit if any of the sqlcmd runs returns an error
    Use a Kerberos keytab file so kinit doesn't need to be run by hand before update_leaf.sh
    
    configure update_leaf.sh so it can be run automatically nightly
        use user other than goldba06

full report on Leaf results
    Demographics, Age & Vital Status all show 13,166,263 patients == #rows in omop.cdm_std.person
    all concept ids for Ethnicity, Gender and Race are wrong
    we have this distribution of Encounter counts ()

Leaf beta
    x try cdm_deid - what about NULLs in person.birth_datetime (3.4 M of them)?
    get post_concept_creation_tasks.sql to run to completion - check error log
    tune MSDW2 indices so LeafDB.app.sp_CalculatePatientCounts runs ~20x faster
    debug LeafDB.app.sp_UpdateSearchIndexTables
    domain names
    public achilles reports
    read "MSDW2 Database Roles & Permissions"
    Update "[CRIO] Digital Concierge Service: Informatics and Data Science Online “Walk-in” Clinic" emails
    create a Leaf dev instance (probably PHI) that I can use after the beta

impt
    start doing actual and revised estimated times
    mouse pad for wrist

conditions:
    when src.usagi.mapping_import is ready, modify conditions.sql to use it
        add filtering that depends on Sharon's comments
    define AUI as PRIMARY KEY for UMLS_ICD10 and create indices on other columns
    documentation
        x describe changes needed in concept_relationship & condition_occurrence by conditions_map
        X add circle & arrows diagram
    report UMLS duplicates to them
    perhaps create general purpose stored procedure that could be used for conditions.sql & other domains

measurements (labs):
    query to extract "Epic LRR" code → LOINC mappings
        - get Epic LRR name → LOINC mappings from sema4
            - evaluate quality, e.g. number/percent duplicates in LRR name
        - add Epic LRR name → Epic LRR code from MSDW2
            - count number/percent Epic LRR name not matched
        - count number/percent of measurements not mapped
        - count number/percent of labs not measured
    load LOINC table from LOINC.sql
    modify 4_labs.sql to update LeafDB.app.Concept

    save & run Sharon's query
    investigate necessary indices on Sema4's columns
    
    Sharon looking for LabComponentDim, LabComponentResultFact

procedures:
    find Epic code → CPT4 mappings in src
    Review Tim's email on "Additional tables desired in src.caboodle"

drugs:
    learn how to map ‘EPIC ERX .1’ source concepts in drug_exposure to RxNorm (Q to Sharon on 7/28)
    BlueTree extract Caboodle’s MedicationCodeDim table, which maps EPIC ERX .1 in MedicationDim to NDC or RxNorm codes, to [src]

Leaf installation:
    x be ready to change Leaf to use the renamed Azure AD groups Darshan is making
    tune MSDW2 indexing for Leaf queries
    obtain new VMs for other Leaf instances
    map de-identified.leaf.msdw.mountsinai.org to 10.95.46.180
    release leaf.mssm.edu
    obtain other new domain names
        PHI.leaf.msdw.mountsinai.org
        BioMe.leaf.msdw.mountsinai.org
        liver.leaf.msdw.mountsinai.org
        anal_cancer.leaf.msdw.mountsinai.org
    use de-identified data

training materials
    x meet with Sharon to outline Leaf intro presentation; send to Laura
    review Laura's presentation in more detail

batch update of concepts and search indices:
    run to completion
        try as background job on Leaf VM
        try to postpone connection timeout between DBeaver and MSDW2 server
    improve performance of condition queries with better indices

other:
    x prepare for mid-year assessment
    buy cable needed for new monitors

other domains:
    try Leaf's functionality for Vitals and Demographics again, and report to Tim
training & helping users:
    X Send presentation RE Leaf docs and help to CM
    Create draft presentation & share with Sharon and Laura
    Get Jira service desk setup, and configured
    get Leaf help email setup, and configured

accessing PHI data:
    Turn off de-identified mode
later:
    why isn't ICD10 N18.6 in UMLS MRHIER.RRF?
    enable DBeaver connection via AD without trustServerCertificate=true for Leaf service account
    add to Leaf suggestions: Leaf concept table should be renamed to leaf_concept, to avoid confusion with CDM concept
    remove (or set aside) small programs in leaf-scripts/leaf_launch/conditions no longer being used, like map_Epic_to_ICD10.sql
    Share Leaf_ideas.txt with Nic
    revisit filtering out of inactive with Tim & Sharon
    will need to rerun conditions.sql as MSDW2 changes, because it only maps Epic codes that are actually used
    reload UMLS_ICD10 with most recent hierarchical ICD10 relationships in the UMLS MRHIER.RRF table
    perhaps make views on all Caboodle tables that hide non-Clarity data
    resources that would help me create and verify queries, such as: the schemas for Caboodle tables, especially with foreign key constraints and/or semantic comments; other documentation about Caboodle’s data at the table and field level.
    determine degree of overlap between SurgicalProcedureEventFact and ProcedureEventFact; see Tim's email on "Additional tables desired in src.caboodle"
    eliminate duplication between leaf_launch/conditions/conditions.sql and other scripts in leaf_launch/conditions
    make rest of child - parent relationships SQL look like the implementation in leaf_icd10.sql